server:
  port: 8080

spring:
  application:
    name: kijinkai
  # Docker 환경을 위한 프로파일별 설정
  profiles:
    active: local
  datasource:
    # 로컬 개발 시 설정 (docker-compose 사용 시 host.docker.internal 사용)
    url: jdbc:mysql://host.docker.internal:3307/kijinkai_local?zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: kijinkai_local_user
    password: 251001
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
  batch:
    jdbc:
      initialize-schema: never
  mail:
    host: smtp.gmail.com
    port: 587
    username:
    password:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  data:
    redis:
      host: localhost # Redis 서버의 호스트 (Docker 사용 시 서비스 이름)
      port: 6379      # Redis 서버의 포트 (기본값 6379)
      # password: your_redis_password # 비밀번호가 있다면 추가
      # database: 0 # 사용할 데이터베이스 번호 (기본값 0)

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  api:
    exchange-rate:
      url: https://api.exchangerate-api.com/v4/latest/

jwt:
  secret: f865bd4eefbaaf49b466d260597ec1885631ba50528c9b7755d722e2a5d665a4ca962aa4bbb8d1bc9addd95a2ef924c83cf6f7cb779e8fbd3e3e6846a16920d2

logging:
  level:
    root: INFO
    com.kijinkai: DEBUG                 # 당신의 애플리케이션(controller, service 등)
    org.springdoc: DEBUG  # SpringDoc 디버깅 추가
    org.springframework.web: DEBUG # Spring MVC 요청 처리 과정 확인
    org.springframework.security: DEBUG # Spring Security 필터 체인 확인
    org.hibernate.SQL: DEBUG             # JPA/Hibernate 쿼리 확인
    org.hibernate.orm.jdbc.bind: TRACE   # JPA/Hibernate 파라미터 바인딩 확인

# SpringDoc 설정 수정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    # 올바른 경로 설정
    config-url: /v3/api-docs/swagger-config
    url: /v3/api-docs
    groups-order: DESC
    operations-sorter: method
    disable-swagger-default-url: true
    display-request-duration: true
  api-docs:
    # 기본 경로로 변경
    path: /v3/api-docs
    enabled: true
  # 패키지 스캔 설정 추가
  packages-to-scan: com.kijinkai
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

---
# Docker 환경용 별도 설정
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    # Docker Compose 내 MySQL 서비스 이름 사용
    url: jdbc:mysql://mysql:3306/kijinkai_local?zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&serverTimezone=Asia/Seoul